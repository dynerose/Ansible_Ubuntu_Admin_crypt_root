---

#- debug:
#    msg: data {{ _root_device_list }}


#_root_disks_by_id:  "/dev/disk/by-id/{{ (_root_disks | map('extract', hostvars[inventory_hostname]['ansible_devices'], ['links', 'ids', 0]) | list).0 }}"


# Partition disks
- name: Check to see if partition exists on disk already
  shell: /sbin/partprobe -s "/dev/{{ item }}"
  with_items:
  - "{{ _system_disks }}"
  register: check_partitions
  failed_when: "'FAILED' in check_partitions.stderr"
  tags:
  - zfs_partition

- include_tasks: mdadmin.yml
  when: _mdadm | default(false) | bool == true
  tags:
    - zfs_partition

- name: forcibly zap disks
  shell: "sgdisk --zap-all {{ item }}"
  with_items:
    - "{{ _root_device_list }}"
  when: _zap_disks | default(false) | bool == true
  tags:
  - zfs_partition

- debug:
    msg: _root_device_list {{ _root_device_list }}
- debug:
    msg: Create bootloader partition(s) {{ _efi_partition_flags }}

# Create bootloader partition(s):
- name: set up efi disk partitions
  shell: "sgdisk {{ _efi_partition_flags }} {{ item }}"
  with_items:
    - "{{ _root_device_list }}"
  when: _efi | default(false) | bool == true
  tags:
  - zfs_partition

# For legacy (BIOS) booting:
- name: set up  legacy (BIOS) disk partitions
  shell: "sgdisk {{ _legacy_partition_flags }} {{ item }}"
  with_items:
    - "{{ _root_device_list }}"
  when: _efi | default(false) |  bool != true
  tags:
  - zfs_partition

# Create a boot pool partition for zfs boot:
- name: set up boot disk partitions
  shell: "sgdisk {{ _boot_zfs_partition_flags }} {{ item }}"
  with_items:
    - "{{ _root_device_list }}"
  when: >
        not _lukscrypt and
        _zfs_boot
  tags:
  - zfs_partition

# Create a boot partition for zfs simple boot:
- name: set up boot disk partitions
  shell: "sgdisk {{ _boot_partition_flags }} {{ item }}"
  with_items:
    - "{{ _root_device_list }}"
  when: >
        not _lukscrypt and
        not _zfs_boot
  tags:
  - zfs_partition

# Create a boot partition for luks boot:
- name: set up boot crypto disk partitions
  shell: "sgdisk {{ _cryptboot_partition_flags }} {{ item }}"
  with_items:
    - "{{ _root_device_list }}"
  when: >
        _lukscrypt and
        not _zfs_boot
  tags:
  - zfs_partition

# Swap widthout raid a single-disk install:
- name: set up swap disk partitions
  shell: "sgdisk {{ _swap_partition_flags }} {{ item }}"
  with_items:
    - "{{ _root_device_list }}"
  when: >
        _swap and
        not _raid
  tags:
  - zfs_partition

# Swap width raid
- name: set up swap disk partitions
  shell: "sgdisk {{ _swap_raid_partition_flags }} {{ item }}"
  with_items:
    - "{{ _root_device_list }}"
  when: >
        _swap and
        _raid
  tags:
  - zfs_partition

############################################################################################################
# Create a root pool partition:
# Unencrypted or ZFS native encryption:
- name: set up root disk partitions
  shell: "sgdisk {{ _root_partition_flags }} {{ item }}"
  with_items:
    - "{{ _root_device_list }}"
  when: >
        not _lukscrypt
#  when:
#    - _lukscrypt | default(false) | bool = !true
  tags:
  - zfs_partition

# LUKS:
- name: set up root disk partitions for LUKS
  shell: "sgdisk {{ _cryptroot_partition_flags }} {{ item }}"
  with_items:
    - "{{ _root_device_list }}"
  when: >
        _lukscrypt
#  when:
#    - _lukscrypt | default(false) | bool == true
  tags:
  - zfs_partition

#- name: set up cryptstore partitions
#  shell: "sgdisk {{ _cryptstore_partition_flags }} {{ item }}"
#  with_items:
#    - "{{ _root_device_list }}"
#  when: _lukscrypt | default(false) | bool == true
#  tags:
#  - zfs_partition

#- name: copy disk partiton for raid
#  shell: "sgdisk -R {{ item }} "
#  with_items:
#    -  "{% for item in  zfs_arrays.devices  %}{{ item }}{% if not loop.last %} {% endif %}{% endfor %}"
#  when: >
#        not _lukscrypt and 
#        _raid
#  tags:
#  - zfs_partition

#- name: set a new GUID on new drive after cloning the partition table
#  shell: "sgdisk -G {{ item }} "
#  with_items:
#    -  "{% for item in  zfs_arrays.devices  %}{{ item }}{% if not loop.last %} {% endif %}{% endfor %}"
#  when: >
#        not _lukscrypt and
#        _raid
#  tags:
#  - zfs_partition

# Not necessary because
# with_items:
#    - "{{ _root_device_list }}"
# in all disks

# If you are creating a mirror or raidz topology, 
# repeat the partitioning commands for all the disks which will be part of the pool.

- name: print info disk
  shell: "sgdisk --print {{ item }}"
  register: r
  with_items:
    - "{{ _root_device_list }}"
  tags:
  - zfs_partition

- name: format boot
  shell: "yes | mkfs.ext4 {{ item }}{{ _boot_part_append }}"
  with_items:
#    - "{{ _root_device_list }}"
    - "/dev/disk/by-id/{{ _root_disks_by_id  | first }}"
  when:
    - _zfs_boot | default(false) | bool != true
    - _lukscrypt | default(false) | bool != true
  tags:
    - zfs_partition
#- debug:
#    msg: format

- name: format /boot/efi
  shell: "yes | mkfs.msdos -F 32 -n EFI {{ item }}{{ _efi_part_append }}"
  with_items:
    -  "/dev/disk/by-id/{{ _root_disks_by_id  | first }}"
# "{{ _root_device_list }}"
  when: _efi | default(false) | bool == true
  tags:
    - zfs_partition
